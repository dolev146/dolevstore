{"version":3,"sources":["./src/app/components/coutingproducts/coutingproducts.component.ts","./src/app/components/coutingproducts/coutingproducts.component.html","./src/app/services/countingproducts.service.ts","./src/app/validators/validateDate.validators.ts","./src/app/components/cardlist/cardlist.component.ts","./src/app/components/cardlist/cardlist.component.html","./src/app/components/buyingmainpage/buyingmainpage.component.ts","./src/app/components/buyingmainpage/buyingmainpage.component.html","./src/app/components/checkout/checkoutmainpage/checkoutsearch/checkoutsearch.component.ts","./src/app/components/checkout/checkoutmainpage/checkoutsearch/checkoutsearch.component.html","./src/app/services/admin.service.ts","./src/app/components/products/dialogadd/dialogadd.component.ts","./src/app/components/products/dialogadd/dialogadd.component.html","./src/environments/environment.ts","./src/app/services/login.service.ts","./src/app/pipes/safepipe.pipe.ts","./src/app/components/eror404/eror404.component.ts","./src/app/components/eror404/eror404.component.html","./src/app/components/admin/add/add.component.ts","./src/app/components/admin/add/add.component.html","./src/app/components/checkout/checkoutmainpage/checkoutmainpage.component.ts","./src/app/components/checkout/checkoutmainpage/checkoutmainpage.component.html","./src/app/components/products/dairyproducts/dairyproducts.component.ts","./src/app/components/products/dairyproducts/dairyproducts.component.html","./src/app/components/buyingsidenavadmin/buyingsidenavadmin.component.ts","./src/app/components/buyingsidenavadmin/buyingsidenavadmin.component.html","./src/app/components/products/allproducts/allproducts.component.ts","./src/app/components/products/allproducts/allproducts.component.html","./src/app/services/products.service.ts","./src/app/material/material/material.module.ts","./src/app/components/admin/main/main.component.ts","./src/app/components/admin/main/main.component.html","./src/app/components/checkout/checkoutmainpage/checkouttable/checkouttable.component.ts","./src/app/components/checkout/checkoutmainpage/checkouttable/checkouttable.component.html","./src/app/services/checkout.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/guards/auth.guard.ts","./src/app/components/buyinglist/buyinglist.component.ts","./src/app/components/buyinglist/buyinglist.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/buyingcartlist/buyingcartlist.component.ts","./src/app/components/buyingcartlist/buyingcartlist.component.html","./src/app/app.module.ts","./src/app/components/buyingcarttable/buyingcarttable.component.ts","./src/app/components/buyingcarttable/buyingcarttable.component.html","./src/app/services/cart.service.ts","./src/app/components/products/searchproducts/searchproducts.component.ts","./src/app/components/products/searchproducts/searchproducts.component.html","./src/app/components/products/fruitsproducts/fruitsproducts.component.ts","./src/app/components/products/fruitsproducts/fruitsproducts.component.html","./src/app/components/checkout/checkoutmainpage/checkoutorder/checkoutorder.component.ts","./src/app/components/checkout/checkoutmainpage/checkoutorder/checkoutorder.component.html","./src/app/components/admin/edit/edit.component.ts","./src/app/components/admin/edit/edit.component.html","./src/app/components/products/meatproducts/meatproducts.component.ts","./src/app/components/products/meatproducts/meatproducts.component.html","./src/app/components/products/wineproducts/wineproducts.component.ts","./src/app/components/products/wineproducts/wineproducts.component.html","./src/app/components/homepage/homepage.component.ts","./src/app/components/homepage/homepage.component.html","./src/app/components/buyingsearch/buyingsearch.component.ts","./src/app/components/buyingsearch/buyingsearch.component.html","./src/app/services/search.service.ts","./src/app/services/register.service.ts","./src/app/app-routing.module.ts","./src/app/components/checkout/checkoutmainpage/checkoutsuccess/checkoutsuccess.component.ts","./src/app/components/checkout/checkoutmainpage/checkoutsuccess/checkoutsuccess.component.html","./src/app/components/why/why.component.ts","./src/app/components/why/why.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CountingproductsService } from \"../../services/countingproducts.service\"\nimport { LoginService } from \"../../services/login.service\"\n\n@Component({\n  selector: 'app-coutingproducts',\n  templateUrl: './coutingproducts.component.html',\n  styleUrls: ['./coutingproducts.component.css']\n})\nexport class CoutingproductsComponent implements OnInit {\n\n  constructor(\n    public count: CountingproductsService,\n    public login: LoginService\n  ) { }\n\n  total_NumberOfOrders\n\n  total_NumberOfProducts\n \n  ngOnInit(): void {\n    this.count.getAllNumberProducts().subscribe((res: any) => {\n      this.total_NumberOfOrders = res.total_NumberOfOrders;\n      this.total_NumberOfProducts = res.total_NumberOfProducts;\n    },\n      err => console.log(err)\n    ) \n  } \n\n \n\n\n\n\n\n \n}\n","<p class=\"mat-h3\">Available products in our store: {{total_NumberOfProducts?.total_NumberOfProducts}}</p>\n<p class=\"mat-h3\">Number of orders submitted in our store: {{total_NumberOfOrders?.total_NumberOfOrders}}</p>\n\n<div *ngIf=\"login.loggedUser.islogged\">\n    <p>Notification:</p>\n    <p *ngIf=\"login.loggedUser.customerCartStatus === 'first_order'\">Welcome {{login.loggedUser.fname}} </p>\n    <p *ngIf=\"login.loggedUser.customerCartStatus === 'new_cart'\">your last purchase was on\n        {{login.loggedUser.last_day}} </p>\n    <p *ngIf=\"login.loggedUser.customerCartStatus === 'continue_cart'\">you have an open cart\n        {{login.loggedUser.last_day}} </p>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountingproductsService {\n\n  BaseUrl = \"/api/homepage/\"\n\n  constructor(private http: HttpClient) { }\n\n  getAllNumberProducts() {\n    return this.http.get(this.BaseUrl + \"numberofproducts\")\n  }\n\n  getCartStatuse() {\n    return this.http.get(this.BaseUrl + \"cartstatus\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": localStorage.access_token\n      }\n    })\n  }\n\n\n\n\n}\n","import { AbstractControl, FormControl } from \"@angular/forms\";\r\n\r\n\r\n\r\nexport function validateDate(control: AbstractControl) {\r\n    return (control: FormControl) => {\r\n        const time = control.value.getTime();\r\n        return this.holidayList.find(x => x == time) ? { error: 'this date is full of orders' } : null\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cardlist',\n  templateUrl: './cardlist.component.html',\n  styleUrls: ['./cardlist.component.css']\n})\nexport class CardlistComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>cardlist works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-buyingmainpage',\n  templateUrl: './buyingmainpage.component.html',\n  styleUrls: ['./buyingmainpage.component.css']\n})\nexport class BuyingmainpageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void { \n  }\n\n}\n","\n<app-buyingsearch></app-buyingsearch>\n<app-buyingcartlist></app-buyingcartlist>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CheckoutService } from '../../../../services/checkout.service'\nimport { CartService } from '../../../../services/cart.service'\nimport { DomSanitizer, SafeHtml, SafeStyle, SafeScript, SafeUrl, SafeResourceUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-checkoutsearch',\n  templateUrl: './checkoutsearch.component.html',\n  styleUrls: ['./checkoutsearch.component.css']\n})\nexport class CheckoutsearchComponent implements OnInit {\n\n  searchItemForm: FormGroup\n\n  constructor(\n    public checkout: CheckoutService,\n    public sanitizer: DomSanitizer,\n    public cart: CartService\n  ) { }\n\n  mymodel\n\n\n  onSearchChange(searchValue: string): void {\n    // console.log(searchValue)\n    // let Array = [...this.checkout?.checkoutTableArray]\n    // this.checkout?.checkoutTableArray.forEach((element, i) => {\n    //   let indexOfSearch = element?.product_name.search(`${searchValue}`)\n    //   if (indexOfSearch != -1) {\n    //     this.checkout.highlightStart = indexOfSearch\n    //     this.checkout.highlightLength = searchValue.length \n    //     this.checkout.searchValueService = searchValue;\n    //     this.checkout?.stylePositions[i][ indexOfSearch, searchValue.length]\n\n\n    //     this.checkout.showSearchBackgroundContainer = true;\n    //   } else if (searchValue === \"\") {\n    //     console.log(\"dolev\")\n    //     this.checkout.showSearchBackgroundContainer = false;\n    //   }\n    // })\n\n\n    // let Array = [...this.checkout?.checkoutTableArray]\n    // if (searchValue === \"\") {\n    //   Array.forEach(element => {\n    //     let indexOfSearch = element?.product_name.search(`<mark>`)\n    //     let startString = element.product_name.slice(0, indexOfSearch)\n    //     let middleString = element.product_name.slice(indexOfSearch, indexOfSearch + 6)\n    //     let endString = element.product_name.slice(indexOfSearch + 6, element.product_name.length )\n    //     console.log(startString)\n    //     console.log(middleString)\n    //     console.log(endString)\n\n    //     let indexOfSearch2 = element?.product_name.search(`</mark>`)\n    //     let startString2 = element.product_name.slice(0, indexOfSearch2)\n    //     let middleString2 = element.product_name.slice(indexOfSearch2, indexOfSearch2 + 6)\n    //     let endString2 = element.product_name.slice(indexOfSearch2 + 6, element.product_name.length - 1)\n    //     console.log(startString2)\n    //     console.log(middleString2)\n    //     console.log(endString2)\n    //   })\n    // } else {\n    //   Array.forEach(element => {\n    //     let indexOfSearch = element?.product_name.search(`${searchValue}`)\n    //     if (indexOfSearch != -1) {\n    //       let startString = element?.product_name.slice(0, indexOfSearch)\n    //       let middleString = element?.product_name.slice(indexOfSearch, indexOfSearch + searchValue.length)\n    //       let endString = element?.product_name.slice(indexOfSearch + searchValue.length, element.product_name.length)\n    //       let result = `${startString}<mark>${middleString}</mark>${endString}`\n    //       console.log(element?.product_name)\n    //       console.log(indexOfSearch)\n    //       console.log(startString)\n    //       console.log(middleString)\n    //       console.log(endString)\n    //       console.log(result)\n    //       element.product_name = result\n    //     }\n    //   });\n    //   this.checkout.checkoutTableArray = [...Array]\n    // }\n\n\n\n  }\n\n  valuechange(searchValue) {\n    this.mymodel = searchValue;\n    console.log(searchValue)\n    if (searchValue === \"\" || searchValue === undefined) {\n      this.checkout.checkoutTableArray = [...this.cart.CartitmeTableArray]\n    } else {\n      let Array = [...this.cart.CartitmeTableArray]\n      Array.forEach((element, i) => {\n        console.log(element?.product_name)\n        let tempElem = element?.product_name['changingThisBreaksApplicationSecurity'];\n        let indexOfSearch\n        if (tempElem) {\n          indexOfSearch = tempElem?.search(`${searchValue}`)\n          if (indexOfSearch != -1) {\n            let startString = tempElem.slice(0, indexOfSearch)\n            let middleString = tempElem.slice(indexOfSearch, indexOfSearch + searchValue.length)\n            let endString = tempElem.slice(indexOfSearch + searchValue.length, element.product_name.length)\n            let result = `${startString}<mark>${middleString}</mark>${endString}`\n            console.log(element?.product_name)\n            console.log(indexOfSearch)\n            console.log(startString)\n            console.log(middleString)\n            console.log(endString)\n            console.log(result)\n            element.product_name = this.sanitizer.bypassSecurityTrustHtml(result)\n          }\n        } else {\n          indexOfSearch = element?.product_name?.search(`${searchValue}`)\n          if (indexOfSearch != -1) {\n            let startString = element?.product_name.slice(0, indexOfSearch)\n            let middleString = element?.product_name.slice(indexOfSearch, indexOfSearch + searchValue.length)\n            let endString = element?.product_name.slice(indexOfSearch + searchValue.length, element.product_name.length)\n            let result = `${startString}<mark>${middleString}</mark>${endString}`\n            console.log(element?.product_name)\n            console.log(indexOfSearch)\n            console.log(startString)\n            console.log(middleString)\n            console.log(endString)\n            console.log(result)\n            element.product_name = this.sanitizer.bypassSecurityTrustHtml(result)\n          }\n        }\n      })\n      this.checkout.checkoutTableArray = [...Array]\n    }\n  }\n\n\n\n  ngOnInit(): void {\n    this.searchItemForm = new FormGroup({\n      product_name: new FormControl('', Validators.required),\n    })\n  }\n\n}\n","<form class=\"flexform\" name=\"searchItemForm\" [formGroup]=\"searchItemForm\">\n    <mat-form-field class=\"margin-left\" appearance=\"outline\">\n        <mat-label>search</mat-label>\n        <input [ngModel]=\"mymodel\" (ngModelChange)=\"valuechange($event)\" formControlName=\"product_name\" matInput required />\n        <mat-error *ngIf=\"searchItemForm.get('product_name').errors?.required\">\n            Input is Required\n        </mat-error>\n    </mat-form-field>\n</form>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n  EditForm: FormGroup\n  constructor(private http: HttpClient) {\n    this.EditForm = new FormGroup({\n      product_name: new FormControl(\"\", Validators.required),\n      category_id: new FormControl(\"\", Validators.required),\n      price: new FormControl(\"\", Validators.required),\n      image_url: new FormControl(\"\", Validators.required)\n    })\n  }\n\n  isEditShow: boolean = false;\n  isAddShow: boolean = false;\n  itemToEdit: {\n    product_name: \"\",\n    category_id: number,\n    price: number,\n    image_url: \"\"\n  }\n\n  addProduct(body) {\n    return this.http.post('/api/products/' + \"addproduct\", body, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": localStorage.access_token\n      }\n    })\n  }\n\n  updateEditForm(item) {\n    this.EditForm.controls['product_name'].setValue(item.product_name)\n    this.EditForm.controls['category_id'].setValue(item.category_id)\n    this.EditForm.controls['price'].setValue(item.price)\n    this.EditForm.controls['image_url'].setValue(item.image_url)\n  }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog'\nimport { LoginService } from '../../../services/login.service'\nimport { CartService } from '../../../services/cart.service'\n\n@Component({\n  selector: 'app-dialogadd',\n  templateUrl: './dialogadd.component.html',\n  styleUrls: ['./dialogadd.component.css']\n})\nexport class DialogaddComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef<DialogaddComponent>,\n    public login: LoginService,\n    public cart: CartService\n  ) { }\n\n  addToCartForm: FormGroup\n  ngOnInit(): void {\n    this.addToCartForm = new FormGroup({\n      quantity: new FormControl('', Validators.required),\n    })\n  }\n\n  onAddToCart() {\n    const { quantity } = this.addToCartForm.value\n    console.log({ quantity, product_id: this.data.product_id, cart_id: this.login.loggedUser.cart_id, General_price: quantity * this.data.product_price })\n    let body = { quantity, product_id: this.data.product_id, cart_id: this.login.loggedUser.cart_id, General_price: quantity * this.data.product_price }\n    this.cart.addToCart(body).subscribe(\n      (res: any) => {\n        console.log(res)\n        this.cart.GetCartItems({ cart_id: this.login.loggedUser.cart_id }).subscribe(\n          (res: any) => {\n            this.cart.CartitmeTableArray = res\n            this.cart.totalPrice = this.getSum()\n          },\n          err => console.log(err)\n        )\n      },\n      err => console.log(err)\n    )\n    this.dialogRef.close()\n    this.addToCartForm.reset()\n  }\n\n\n  getSum() { \n    return this.cart.CartitmeTableArray.reduce((currentTotal, item) => {\n      return item.General_price + currentTotal\n    }, 0)\n  }\n}   \n","<h2 mat-dialog-title>Add item to cart</h2>\n<form (ngSubmit)=\"onAddToCart()\" name=\"addToCartForm\" [formGroup]=\"addToCartForm\">\n<mat-dialog-content>\n    <div style=\"margin-bottom: 0.02rem;\">\n        Price : {{data.product_price | currency}}\n    </div>\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Quantity</mat-label>\n        <input type=\"number\" formControlName=\"quantity\" matInput required />\n        <mat-error *ngIf=\"addToCartForm.get('quantity').errors?.required\">\n            Input is required\n        </mat-error>\n    </mat-form-field>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n   \n    <button color=\"primary\" [disabled]=\"addToCartForm.invalid\" mat-raised-button >Add To Cart</button>\n    <button color=\"warn\" type=\"button\" mat-raised-button mat-dialog-close>Cancel</button>\n    \n</mat-dialog-actions>\n</form>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { CountingproductsService } from './countingproducts.service'\nimport jwt_decode from 'jwt-decode';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  BaseUrl = \"/api/customers/\"\n\n  constructor(private http: HttpClient, private count: CountingproductsService) { }\n\n  loggedUser = {\n    islogged: false,\n    customer_id: 0,\n    cart_id: 0,\n    customerCartStatus: \"\",\n    last_day: \"\",\n    open_cart: false,\n    fname: \"\",\n    role: \"\"\n  }\n\n  submitLogin(body) {\n    return this.http.post(this.BaseUrl + 'login', body, {\n      headers: { \"Content-Type\": \"application/json\" }\n    })\n  }\n\n  getDecodedAccessToken(token: string): any {\n    try {\n      return jwt_decode(token);\n    }\n    catch (Error) {\n      return null;\n    }\n  }\n\n  StartResumeShopping(body) {\n    const url = \"/api/homepage/startresumeshopping\"\n    const httpOptions = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": localStorage.access_token\n      }\n    }\n    return this.http.post(url, body, httpOptions)\n  }\n\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeStyle, SafeScript, SafeUrl, SafeResourceUrl } from '@angular/platform-browser';\n\n\n@Pipe({\n  name: 'safepipe'\n})\nexport class SafepipePipe implements PipeTransform {\n  constructor(protected sanitizer: DomSanitizer) { }\n\n  transform(htmlString: string): any {\n    return this.sanitizer.bypassSecurityTrustHtml(htmlString);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-eror404',\n  templateUrl: './eror404.component.html',\n  styleUrls: ['./eror404.component.css']\n})\nexport class Eror404Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"contain_error404\">\n    <br>\n    <br>\n    <br>\n    <br>\n    <br>\n    <br>\n    <br>\n\n    <div class=\"mainbox\">\n        <div class=\"err\">404</div>\n        <br>\n        <br>\n        <br>\n        <br>\n        <br>\n        <br>\n        <div class=\"msg\">Maybe this page moved? Got deleted? Is hiding out in quarantine? Never existed in the first\n            place? <br><br>\n            <p>Let's go <a routerLink=\"/home\">home</a> and try from there.</p>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CartService } from '../../../services/cart.service'\nimport { ProductsService } from '../../../services/products.service'\nimport { AdminService } from '../../../services/admin.service'\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\nexport class AddComponent implements OnInit {\n\n  constructor(public cart: CartService,\n    public products: ProductsService,\n    public admin: AdminService\n  ) { }\n\n\n  AddForm: FormGroup\n\n\n  ngOnInit(): void {\n    this.AddForm = new FormGroup({\n      product_name: new FormControl('', Validators.required),\n      category_id: new FormControl('', Validators.required),\n      price: new FormControl('', Validators.required),\n      image_url: new FormControl('', Validators.required)\n    })\n  }\n\n  onADD() {\n    console.log(this.AddForm.value)\n\n    this.admin.addProduct(this.AddForm.value).subscribe(\n      (res: any) => {\n        console.log(res)\n        this.AddForm.reset()\n        this.cart.isSideNavOpen = false;\n        //update list of procuts\n        this.products.getAllProducts().subscribe(\n          (res: any) => {\n            console.log(res)\n            this.products.AllProducts = res\n          },\n          err => console.log(err)\n        )\n      },\n      err => console.log(err)\n    )\n\n\n\n  }\n\n  categories = [\n    { cname: 'Milk & Dairy', cID: 1 },\n    { cname: 'Vegetables & Fruits', cID: 2 },\n    { cname: 'Meat & Fish', cID: 3 },\n    { cname: 'Wine & Drinks', cID: 4 }\n  ]\n}  \n","\n<form (ngSubmit)=\"onADD()\" name=\"AddForm\" [formGroup]=\"AddForm\" style=\"width: 40vw; display: flex;flex-direction: column; justify-content: space-around;align-items: center;margin-top: 0.5rem;\">\n    <mat-form-field style=\"width: 50%;\" class=\"full-width\" appearance=\"outline\">\n        <mat-label>Product Name</mat-label>\n        <input type=\"text\" formControlName=\"product_name\" matInput required />\n        <mat-error *ngIf=\"AddForm.get('product_name').errors?.required\">\n             Product Name is Required \n        </mat-error>\n    </mat-form-field>\n\n    <mat-form-field style=\"width: 50%;\" class=\"full-width\" appearance=\"outline\">\n        <mat-label>Category</mat-label>\n        <mat-select formControlName=\"category_id\" required>\n            <mat-option *ngFor=\"let Category of categories\" [value]=\"Category.cID\">\n              {{Category.cname}}\n            </mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"AddForm.get('category_id').errors?.required\">\n            Category is Required \n         </mat-error>\n    </mat-form-field>\n    \n\n    <mat-form-field style=\"width: 50%;\" class=\"full-width\" appearance=\"outline\">\n        <mat-label>Price</mat-label>\n        <input type=\"number\" formControlName=\"price\" matInput required />\n        <mat-error *ngIf=\"AddForm.get('price').errors?.required\">\n           Price is Required \n        </mat-error>\n    </mat-form-field>\n    <mat-form-field style=\"width: 50%;\" class=\"full-width\" appearance=\"outline\">\n        <mat-label>Image Url</mat-label>\n        <input formControlName=\"image_url\" matInput required />\n        <mat-error *ngIf=\"AddForm.get('image_url').errors?.required\">\n            Image Url Required\n        </mat-error>\n    </mat-form-field>\n    <button mat-raised-button color=\"primary\" >Add Product</button>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-checkoutmainpage',\n  templateUrl: './checkoutmainpage.component.html',\n  styleUrls: ['./checkoutmainpage.component.css']\n})\nexport class CheckoutmainpageComponent implements OnInit {\n\n  constructor(public router: Router) { }\n\n  ngOnInit(): void {\n  }    \n\n  goBack() {\n    this.router.navigateByUrl(\"/buyingmainpage\")\n  }\n\n} \n ","<app-checkoutsearch></app-checkoutsearch>\n<button mat-raised-button (click)=\"goBack()\" class=\"give_me_space\" >Back To Shop</button>\n<div style=\"display: flex; justify-content: space-around;\">\n    <app-checkouttable class=\"flexorder\"></app-checkouttable>\n    <app-checkoutorder class=\"flexorder\"></app-checkoutorder>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { CartService } from 'src/app/services/cart.service';\nimport { LoginService } from 'src/app/services/login.service';\nimport { ProductsService } from 'src/app/services/products.service';\nimport { DialogaddComponent } from '../dialogadd/dialogadd.component';\n\n@Component({\n  selector: 'app-dairyproducts',\n  templateUrl: './dairyproducts.component.html',\n  styleUrls: ['./dairyproducts.component.css']\n})\nexport class DairyproductsComponent implements OnInit {\n\n  constructor(    public product: ProductsService,\n    public dialog: MatDialog,\n    public login: LoginService,\n    public cart: CartService,\n    public admin: AdminService) { }\n\n  ngOnInit(): void {\n  }\n\n  AddToCart(product_id, product_price) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.autoFocus = true\n    this.dialog.open(DialogaddComponent, { data: { product_id, product_price } });\n  }\n\n  editClicked(item) {\n    console.log( item )\n    this.admin.itemToEdit = item \n    this.admin.updateEditForm(item)\n    this.admin.isEditShow = true;\n    this.admin.isAddShow = false;\n    this.cart.isSideNavOpen = true;\n  }\n\n}\n","<div *ngIf=\"product?.AllProducts?.Milk_Dairy_Array.length !== 0\" class=\"flex\">\n    <mat-card *ngFor=\"let item of product?.AllProducts?.Milk_Dairy_Array\" class=\"card\">\n        <mat-card-header>\n            <mat-card-title>{{item.product_name | titlecase}}</mat-card-title>\n        </mat-card-header>\n        <img mat-card-image class=\"img\"  [src]=\"item.image_url\" [alt]=\"item.product_name\">\n        <mat-card-actions align=\"end\">\n            <button *ngIf=\"login.loggedUser.role==='user'\" (click)=\"AddToCart(item.product_id,item.price)\" matTooltip=\"Add To Cart\" color=\"primary\" mat-fab><mat-icon>add_shopping_cart</mat-icon></button>\n            <button *ngIf=\"login.loggedUser.role==='admin'\" (click)=\"editClicked(item)\" matTooltip=\"Edit\" color=\"primary\" mat-fab><mat-icon>edit</mat-icon></button>\n        </mat-card-actions>\n    </mat-card>\n</div>\n<div class=\"warninng\" *ngIf=\"product?.AllProducts?.Milk_Dairy_Array.length === 0\">\n    <h1 style=\"text-align: center;\">This Category Is Empty </h1>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-buyingsidenavadmin',\n  templateUrl: './buyingsidenavadmin.component.html',\n  styleUrls: ['./buyingsidenavadmin.component.css']\n})\nexport class BuyingsidenavadminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>buyingsidenavadmin works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ProductsService } from '../../../services/products.service'\nimport { LoginService } from '../../../services/login.service'\nimport { AdminService } from '../../../services/admin.service'\nimport { CartService } from '../../../services/cart.service'\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog'\nimport { DialogaddComponent } from '../dialogadd/dialogadd.component';\n\n@Component({\n  selector: 'app-allproducts',\n  templateUrl: './allproducts.component.html',\n  styleUrls: ['./allproducts.component.css']\n})\nexport class AllproductsComponent implements OnInit {\n\n  constructor(\n    public product: ProductsService,\n    public dialog: MatDialog,\n    public login: LoginService,\n    public cart: CartService,\n    public admin: AdminService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  AddToCart(product_id, product_price) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.autoFocus = true\n    this.dialog.open(DialogaddComponent, { data: { product_id, product_price } });\n  }\n\n  editClicked(item) {\n    console.log( item )\n    this.admin.itemToEdit = item \n    this.admin.updateEditForm(item)\n    this.admin.isEditShow = true;\n    this.admin.isAddShow = false;\n    this.cart.isSideNavOpen = true;\n  }\n}\n ","<div *ngIf=\"product?.AllProducts?.NotOrderedArray.length !== 0\" class=\"flex\">\n    <mat-card *ngFor=\"let item of product?.AllProducts?.NotOrderedArray\" class=\"card\">\n        <mat-card-header>\n            <mat-card-title>{{item.product_name | titlecase}}</mat-card-title>\n        </mat-card-header>\n        <img mat-card-image class=\"img\"  [src]=\"item.image_url\" [alt]=\"item.product_name\">\n        <mat-card-actions align=\"end\">\n            <button *ngIf=\"login.loggedUser.role==='user'\" (click)=\"AddToCart(item.product_id,item.price)\" matTooltip=\"Add To Cart\" color=\"primary\" mat-fab><mat-icon>add_shopping_cart</mat-icon></button>\n            <button *ngIf=\"login.loggedUser.role==='admin'\" (click)=\"editClicked(item)\" matTooltip=\"Edit\" color=\"primary\" mat-fab><mat-icon>edit</mat-icon></button>\n        </mat-card-actions>\n    </mat-card>\n</div>\n<div class=\"warninng\" *ngIf=\"product?.AllProducts?.NotOrderedArray.length === 0\">\n    <h1 style=\"text-align: center;\">This Category Is Empty </h1>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n  AllProducts: any\n  constructor(public http: HttpClient) { }\n  selectedTab = 0\n\n  BaseUrl = \"/api/products/\"\n\n  getAllProducts() {\n    return this.http.get(this.BaseUrl + \"allproducts\")\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatGridListModule } from \"@angular/material/grid-list\";\nimport { MatTabsModule } from \"@angular/material/tabs\";\nimport { MatStepperModule } from \"@angular/material/stepper\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatSnackBarModule } from '@angular/material/snack-bar'\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDialogModule } from '@angular/material/dialog'\nimport { MatTableModule } from '@angular/material/table'\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core'\n\n\nconst material = [\n  MatToolbarModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatTabsModule,\n  MatStepperModule,\n  MatInputModule,\n  MatCardModule,\n  MatButtonModule,\n  MatIconModule,\n  MatSnackBarModule,\n  MatSidenavModule,\n  MatDividerModule,\n  MatDialogModule,\n  MatTooltipModule,\n  MatTableModule,\n  MatSelectModule,\n  MatDatepickerModule,\n  MatNativeDateModule\n]\n\n@NgModule({\n  imports: [material],\n  exports: [material]\n})\nexport class MaterialModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from \"../../../services/admin.service\"\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  constructor(public admin: AdminService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-edit *ngIf=\"admin.isEditShow === true\"></app-edit>\n<app-add *ngIf=\"admin.isAddShow === true\"></app-add>","import { Component, OnInit } from '@angular/core';\nimport { CartService } from '../../../../services/cart.service'\nimport { CheckoutService } from '../../../../services/checkout.service'\n\n@Component({\n  selector: 'app-checkouttable',\n  templateUrl: './checkouttable.component.html',\n  styleUrls: ['./checkouttable.component.css']\n})   \nexport class CheckouttableComponent implements OnInit {\n              \n  constructor( \n    public cart: CartService,\n    public checkout: CheckoutService\n \n  ) { }  \n \n  ngOnInit(): void {\n    this.checkout.checkoutTableArray = this.cart.CartitmeTableArray\n    console.log(this.checkout.checkoutTableArray)\n  }   \n\n  \n\n  displayedColumns: string[] = ['Name', 'Quantity', 'Price'];\n \n}\n  ","<h1 style=\"text-align: center;\">Preview of the receipt</h1>\n<mat-divider></mat-divider>\n\n<table style=\"width:100%;max-height: 70%;\" mat-table [dataSource]=\"checkout.checkoutTableArray\"\n    class=\"mat-elevation-z8\">\n\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"Name\">\n        <th mat-header-cell *matHeaderCellDef> Name </th>\n        <td mat-cell *matCellDef=\"let element\">\n            <span [innerHTML]=\"element.product_name\" >\n            </span>\n            <!-- <span\n                *ngIf=\"checkout?.searchValueService === undefined || checkout?.searchValueService === '' \">{{element.product_name | lowercase | safepipe}}\n            </span>\n            <span *ngIf=\"checkout?.searchValueService !== undefined || checkout?.searchValueService !== '' \" [innerHTML]=\"checkout.searchValueService | safepipe\">\n            </span> -->\n\n        </td>\n    </ng-container>\n\n    <!-- Quantity Column -->\n    <ng-container matColumnDef=\"Quantity\">\n        <th mat-header-cell *matHeaderCellDef> Quantity </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.quantity}} </td>\n    </ng-container>\n\n    <!-- Price Column -->\n    <ng-container matColumnDef=\"Price\">\n        <th mat-header-cell *matHeaderCellDef> Price </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.General_price}} </td>\n    </ng-container>\n\n\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n<mat-card align=\"center\">\n    <p style=\"padding-top:1rem ;\">\n        Total Price : {{cart.totalPrice}}\n    </p>\n</mat-card>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckoutService {\n\n  constructor(private http: HttpClient) { }\n\n  checkoutTableArray;\n  searchValueService = \"\";\n  OccupiedDates = []\n  order_id: any;\n\n\n\n  getInputValueFromDoubleClick(body) {\n    let url = \"/api/orders/getuserinformationbydoubleclick\"\n    return this.http.post(url, body, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": localStorage.access_token\n      }\n    })\n  }\n\n  PlaceTheOrder(body) {\n    let url = \"/api/orders/placeorder\"\n    return this.http.post(url, body, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": localStorage.access_token\n      }\n    })\n  }\n\n  getOccupiedDates() {\n    let url = \"/api/orders/getoccupieddates\"\n    return this.http.get(url, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": localStorage.access_token\n      }\n    })\n  }\n\n\n  getRecieptInformation(body) {\n    let url = \"/api/orders/getrecieptinformation\"\n    return this.http.post(url, body, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": localStorage.access_token\n      }\n    })\n  }\n\n\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'dolevstore';\n}\n ","\n\n<div>\n  <mat-toolbar color=\"primary\" class=\"navbar\">\n      <div><a routerLink=\"/home\" style=\"color: whitesmoke; text-decoration: none;\">shufersal dublon</a></div>\n      <div>\n          <span>contact: </span>\n          <a style=\"margin-right: 1rem;\" href=\"tel:+972505884960\" mat-fab color=\"accent\"><mat-icon >call</mat-icon></a>\n          <span>Dolev Dublon</span>\n      </div>\n  </mat-toolbar>\n</div>\n\n<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { LoginService } from '../services/login.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private login: LoginService, private router: Router) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): any {\n    if (!this.login.loggedUser.islogged) {\n      this.router.navigateByUrl(\"/home\")\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CartService } from '../../services/cart.service'\nimport { LoginService } from '../../services/login.service'\nimport { AdminService } from '../../services/admin.service'\nimport { ProductsService } from '../../services/products.service'\nimport { SearchService } from '../../services/search.service'\n@Component({\n  selector: 'app-buyinglist',\n  templateUrl: './buyinglist.component.html',\n  styleUrls: ['./buyinglist.component.css']\n})\nexport class BuyinglistComponent implements OnInit {\n\n  constructor(public search:SearchService,public cart: CartService, public product: ProductsService, public login: LoginService, public admin: AdminService) { }\n\n\n\n\n  ngOnInit(): void {\n    this.product.getAllProducts().subscribe(\n      (res: any) => {\n        console.log(res)\n        this.product.AllProducts = res\n      },\n      err => console.log(err))\n  }\n\n  logChange(i) {\n    console.log(i)\n  }\n\n \n  toggleSideNav() {\n    this.cart.isSideNavOpen = !this.cart.isSideNavOpen\n  }\n\n  AddItem() {\n    this.admin.isEditShow = false;\n    this.admin.isAddShow = true;\n    this.cart.isSideNavOpen = !this.cart.isSideNavOpen\n  }\n\n}\n","\n<div style=\"display: flex; justify-content: space-around;\">\n    <button *ngIf=\"login.loggedUser.role==='user'\" (click)=\"toggleSideNav()\" matTooltip=\"Open Cart\" mat-fab><mat-icon>shopping_cart</mat-icon></button>\n    <button *ngIf=\"login.loggedUser.role==='admin'\" (click)=\"AddItem()\" matTooltip=\"Add Item\" mat-fab><mat-icon>add</mat-icon></button>\n\n\n\n\n\n    <mat-tab-group style=\"width: 90vw;\" #tabRef [(selectedIndex)]=\"product.selectedTab\" (selectedTabChange)=\"logChange(tabRef.selectedIndex)\">\n        <mat-tab label=\"All\">\n        <app-allproducts></app-allproducts>\n        </mat-tab>\n        <mat-tab label=\"Milk & Dairy\">\n            <app-dairyproducts></app-dairyproducts>\n        </mat-tab>\n        <mat-tab label=\"Vegetables & Fruits\">\n            <app-fruitsproducts></app-fruitsproducts>\n        </mat-tab>\n        <mat-tab label=\"Meat & Fish\">\n            <app-meatproducts></app-meatproducts>\n        </mat-tab>\n        <mat-tab label=\"Wine & Drinks\">\n            <app-wineproducts></app-wineproducts>\n        </mat-tab>\n        <mat-tab label=\"Search Results\" [disabled]=\"search.matTabDisabled\">\n            <app-searchproducts></app-searchproducts>\n        </mat-tab>\n      </mat-tab-group>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { LoginService } from '../../services/login.service'\nimport { CartService } from '../../services/cart.service'\nimport { CountingproductsService } from '../../services/countingproducts.service'\nimport { MatSnackBar } from '@angular/material/snack-bar'\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  hide: boolean = true;\n\n  loginForm: FormGroup\n  constructor(\n    public login: LoginService,\n    public router: Router,\n    private count: CountingproductsService,\n    private snackBar: MatSnackBar,\n    public cart: CartService\n  ) { }\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', Validators.required)\n    })\n  }\n  openSnackBar(message, action) {\n    let snackBarRef = this.snackBar.open(message, action, { duration: 2000 })\n    snackBarRef.afterDismissed().subscribe(() => {\n    })\n    snackBarRef.onAction().subscribe(() => {\n    })\n  }\n\n  onLogin() {\n    this.login.submitLogin(this.loginForm.value).subscribe((res: any) => {\n      console.log(res)\n      this.login.loggedUser.customer_id = res.customer_id;\n      this.login.loggedUser.islogged = true;\n      let tokenInfo = this.login.getDecodedAccessToken(res.access_token)\n      this.login.loggedUser.fname = tokenInfo.fname\n      this.login.loggedUser.role = tokenInfo.role\n      this.storeTokens(res.access_token, res.refresh_token)\n      this.count.getCartStatuse().subscribe((res: any) => {\n        console.log(res.customerCartStatus)\n        this.login.loggedUser.customerCartStatus = res.customerCartStatus\n      },\n        err => console.log(err))\n    },\n      err => {\n        this.snackBar.open('user not found please try diffrent email or password', 'dismiss', { duration: 4000 })\n      }\n    )\n  }\n\n\n\n  storeTokens(access_token, refresh_token) {\n    localStorage.setItem('access_token', access_token)\n    localStorage.setItem('refresh_token', refresh_token)\n  }\n\n  async startShopping() {\n    let req_body = { customerCartStatus: this.login.loggedUser.customerCartStatus, customer_id: this.login.loggedUser.customer_id }\n    await this.login.StartResumeShopping(req_body).subscribe(\n      (res: any) => {\n        console.log(res)\n        this.login.loggedUser.cart_id = res.cart_id\n        this.cart.GetCartItems({ \"cart_id\": res.cart_id }).subscribe(\n          (res: any) => {\n            this.cart.CartitmeTableArray = res\n            this.cart.totalPrice = this.getSum()\n          },\n          err => console.log(err)\n        )\n        this.router.navigateByUrl('/buyingmainpage')\n      },\n      err => console.log(err)\n    )\n  }\n\n\n  getSum() {\n    return this.cart.CartitmeTableArray.reduce((currentTotal, item) => {\n      return item.General_price + currentTotal\n    }, 0)\n  }\n}\n","<mat-card>\n    <mat-card-title>\n        <button [disabled]=\"!login.loggedUser.islogged\" mat-raised-button color=\"primary\" (click)=\"startShopping()\">\n            {{ login?.loggedUser?.customerCartStatus === \"continue_cart\" ?  \"Resume Shopping\" : \"Start Shopping\" }} </button>\n    </mat-card-title>\n    <mat-card-content>\n\n        <form *ngIf=\"!login.loggedUser.islogged\" (ngSubmit)=\"onLogin()\" name=\"loginForm\" [formGroup]=\"loginForm\">\n            <div class=\"header\">\n                <h2>Login</h2>\n            </div>\n            <div class=\"email-input\">\n                <mat-form-field class=\"full-width\" appearance=\"outline\">\n                    <mat-label>Email</mat-label>\n                    <input formControlName=\"email\" matInput required />\n                    <mat-error *ngIf=\"loginForm.get('email').errors?.required\">\n                        Required email adress\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div>\n                <span class=\"aLink\">Dont have an account yet ? <a mat-raised-button color=\"accent\"\n                        routerLink=\"/register\">register</a> </span>\n                <mat-form-field class=\"full-width\" appearance=\"outline\">\n                    <mat-label>Password</mat-label>\n                    <input formControlName=\"password\" matInput [type]=\"hide ? 'password' : 'text'\" required />\n                    <mat-icon class=\"visibilityIcon\" mat-icon-button matSuffix (click)=\"hide = !hide\"\n                        [attr.aria-label]=\"'Hide Password'\" [attr.aria-pressed]=\"hide\">\n                        {{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\n                    <mat-error *ngIf=\"loginForm.get('password').errors?.required\">\n                        Required password\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <button align=\"end\" mat-flat-button color=\"primary\" [disabled]=\"loginForm.invalid\"> Login </button>\n        </form>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { RegisterService } from '../../services/register.service'\nimport { MatSnackBar } from '@angular/material/snack-bar'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  @ViewChild('StepOne') StepOne;\n\n  constructor(public rs: RegisterService, private snackBar: MatSnackBar, private r: Router) { }\n\n  registerForm: FormGroup\n  isComplited: boolean = false;\n  isFirstStepValid: boolean = false;\n  isPasswordsMatch: boolean = false;\n  isIDTaken: boolean = false;\n\n  ngOnInit(): void {\n    this.registerForm = new FormGroup({\n      customer_id: new FormControl('', Validators.required),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', Validators.required),\n      passwordconfirm: new FormControl('', [Validators.required]),\n      city: new FormControl('', Validators.required),\n      street: new FormControl('', Validators.required),\n      fname: new FormControl('', Validators.required),\n      lname: new FormControl('', Validators.required),\n    })\n\n\n\n  }\n\n\n\n\n  onRegister() {\n    this.rs.submitRegister(this.registerForm.value).subscribe((res) => {\n      this.snackBar.open(`registered successfully!`, 'dismiss', { duration: 4000 })\n      this.r.navigateByUrl(\"/home\")\n    }\n      ,\n      err => {\n        console.log(err)\n        this.snackBar.open(`${err.error.msg}`, 'dismiss', { duration: 4000 })\n      }\n    )\n  }\n\n  PasswordsMatchFunction(password, passwordconfirm) {\n    if (password.value == passwordconfirm.value) {\n      this.isPasswordsMatch = false\n    }\n    else {\n      this.isPasswordsMatch = true\n    }\n  }\n\n  FirstStepValidfunction() {\n    if (this.registerForm.controls['customer_id'].valid\n      && this.registerForm.controls['email'].valid\n      && this.registerForm.controls['password'].valid\n      && this.registerForm.controls['passwordconfirm'].valid) {\n      this.isFirstStepValid = true\n    } else {\n      this.isFirstStepValid = false\n    }\n  }\n\n\n\n  isStepFilled() {\n    this.PasswordsMatchFunction(this.registerForm.controls['password'], this.registerForm.controls['passwordconfirm'])\n    this.FirstStepValidfunction()\n    if (!this.isPasswordsMatch && this.isFirstStepValid && !this.isIDTaken) {\n      this.isComplited = true\n      this.StepOne.complited = true\n    } else {\n      this.isComplited = false\n      this.StepOne.complited = false\n    }\n  }\n\n\n  IDinputChange() {\n    this.isStepFilled();\n    let customer_id = { \"customer_id\": this.registerForm.controls['customer_id'].value }\n    this.rs.CheckID(customer_id).subscribe((res: any) => {\n      this.isIDTaken = res['error']\n    },\n      err => {\n        this.isIDTaken = err.error['error']\n      }\n    )\n  }\n\n\n\n}\n","<a routerLink=\"/home\" mat-flat-button color=\"primary\" style=\"margin-left: 70%; margin-top: 0.7%;\">back to homepage</a>\n\n<form style=\"width: 70%; margin-left: 15%;\" (ngSubmit)=\"onRegister()\" name=\"registerForm\" [formGroup]=\"registerForm\">\n  <mat-horizontal-stepper linear>\n    <mat-step label=\"Sign in information\" #StepOne [completed]=\"isComplited\">\n\n      <div>\n        <mat-form-field class=\"width\" appearance=\"outline\">\n          <mat-label>ID</mat-label>\n          <input (change)=\"IDinputChange();\" formControlName=\"customer_id\" matInput required type=\"number\" />\n          <mat-error *ngIf=\"registerForm.get('customer_id').errors?.required\">\n            id is Required\n          </mat-error>\n          <div class=\"red\" *ngIf=\"isIDTaken\">\n            ID is already taken\n          </div>\n        </mat-form-field>\n      </div>\n\n      <div>\n        <mat-form-field class=\"width\" appearance=\"outline\">\n          <mat-label>Email</mat-label>\n          <input (change)=\"isStepFilled()\" formControlName=\"email\" matInput required />\n          <mat-error *ngIf=\"registerForm.get('email').errors?.required\">\n            Required email adress\n          </mat-error>\n          <mat-error *ngIf=\"registerForm.get('email').errors?.email\">\n            not valid email adress\n          </mat-error>\n        </mat-form-field>\n      </div>\n\n      <div>\n        <mat-form-field class=\"width\" appearance=\"outline\">\n          <mat-label>Password</mat-label>\n          <input (change)=\"isStepFilled()\" formControlName=\"password\" matInput required />\n          <mat-error *ngIf=\"registerForm.get('password').errors?.required\">\n            password is Required\n          </mat-error>\n        </mat-form-field>\n      </div>\n\n      <div>\n        <mat-form-field class=\"width\" appearance=\"outline\">\n          <mat-label>Password Confirm</mat-label>\n          <input (change)=\"isStepFilled()\" formControlName=\"passwordconfirm\" matInput required />\n          <mat-error *ngIf=\"registerForm.get('passwordconfirm').errors?.required\">\n            Password Confirm is Required\n          </mat-error>\n          <div class=\"red\"\n            *ngIf=\"registerForm.controls.password.dirty && registerForm.controls.passwordconfirm.dirty && isPasswordsMatch\">\n            passwords doesnt match\n          </div>\n        </mat-form-field>\n      </div>\n\n\n\n      <button mat-raised-button color=\"primary\" matStepperNext [disabled]=\"!isComplited\" type=\"button\">Next</button>\n    </mat-step>\n\n    <mat-step label=\"Billing adress and name\">\n\n      <div>\n        <mat-form-field class=\"width\" appearance=\"outline\">\n          <mat-label>City</mat-label>\n          <input formControlName=\"city\" matInput required />\n          <mat-error *ngIf=\"registerForm.get('city').errors?.required\">\n            city is Required\n          </mat-error>\n        </mat-form-field>\n      </div>\n\n      <div>\n        <mat-form-field class=\"width\" appearance=\"outline\">\n          <mat-label>Street</mat-label>\n          <input formControlName=\"street\" matInput required />\n          <mat-error *ngIf=\"registerForm.get('street').errors?.required\">\n            street is Required\n          </mat-error>\n        </mat-form-field>\n      </div>\n\n      <div>\n        <mat-form-field class=\"width\" appearance=\"outline\">\n          <mat-label>Name</mat-label>\n          <input formControlName=\"fname\" matInput required />\n          <mat-error *ngIf=\"registerForm.get('fname').errors?.required\">\n            name is Required\n          </mat-error>\n        </mat-form-field>\n      </div>\n\n      <div>\n        <mat-form-field class=\"width\" appearance=\"outline\">\n          <mat-label>Last name</mat-label>\n          <input formControlName=\"lname\" matInput required />\n          <mat-error *ngIf=\"registerForm.get('lname').errors?.required\">\n            last name is Required\n          </mat-error>\n        </mat-form-field>\n      </div>\n\n\n      <div style=\"display: flex; justify-content: space-around;\">\n        <button mat-raised-button color=\"primary\" matStepperPrevious type=\"button\">\n          Back\n        </button>\n\n        <button mat-raised-button color=\"accent\" [disabled]=\"!registerForm.valid\">Register</button>\n      </div>\n    </mat-step>\n  </mat-horizontal-stepper>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { CartService } from '../../services/cart.service'\nimport { LoginService } from '../../services/login.service'\n\n@Component({\n  selector: 'app-buyingcartlist',\n  templateUrl: './buyingcartlist.component.html',\n  styleUrls: ['./buyingcartlist.component.css']\n})\nexport class BuyingcartlistComponent implements OnInit {\n\n  constructor(public cart: CartService,\n    public login: LoginService) { } \n \n  ngOnInit(): void {\n\n  }\n\n}\n","<mat-sidenav-container>\n    <mat-sidenav mode=\"over\" [(opened)]=\"cart.isSideNavOpen\">\n        <div *ngIf=\"login.loggedUser.role==='user'\">\n            <h1 style=\"text-align: center;\">My Cart</h1>\n            <mat-divider></mat-divider>\n            <app-buyingcarttable></app-buyingcarttable>\n        </div>\n        <div *ngIf=\"login.loggedUser.role==='admin'\">\n            <h1 style=\"text-align: center;\">Admin Interface</h1>\n            <mat-divider></mat-divider>\n            <app-main></app-main>\n        </div>\n    </mat-sidenav>\n    <mat-sidenav-content>\n        <app-buyinglist></app-buyinglist>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material/material/material.module';\nimport { HomepageComponent } from './components/homepage/homepage.component';\nimport { Eror404Component } from './components/eror404/eror404.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { WhyComponent } from './components/why/why.component';\nimport { CoutingproductsComponent } from './components/coutingproducts/coutingproducts.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { BuyinglistComponent } from './components/buyinglist/buyinglist.component';\nimport { BuyingcartlistComponent } from './components/buyingcartlist/buyingcartlist.component';\nimport { BuyingsearchComponent } from './components/buyingsearch/buyingsearch.component';\nimport { BuyingmainpageComponent } from './components/buyingmainpage/buyingmainpage.component';\nimport { CardlistComponent } from './components/cardlist/cardlist.component';\nimport { AllproductsComponent } from './components/products/allproducts/allproducts.component';\nimport { DairyproductsComponent } from './components/products/dairyproducts/dairyproducts.component';\nimport { FruitsproductsComponent } from './components/products/fruitsproducts/fruitsproducts.component';\nimport { MeatproductsComponent } from './components/products/meatproducts/meatproducts.component';\nimport { WineproductsComponent } from './components/products/wineproducts/wineproducts.component';\nimport { SearchproductsComponent } from './components/products/searchproducts/searchproducts.component';\nimport { DialogaddComponent } from './components/products/dialogadd/dialogadd.component';\nimport { BuyingcarttableComponent } from './components/buyingcarttable/buyingcarttable.component';\nimport { CheckoutmainpageComponent } from './components/checkout/checkoutmainpage/checkoutmainpage.component';\nimport { BuyingsidenavadminComponent } from './components/buyingsidenavadmin/buyingsidenavadmin.component';\nimport { MainComponent } from './components/admin/main/main.component';\nimport { EditComponent } from './components/admin/edit/edit.component';\nimport { AddComponent } from './components/admin/add/add.component';\nimport { CheckouttableComponent } from './components/checkout/checkoutmainpage/checkouttable/checkouttable.component';\nimport { CheckoutorderComponent } from './components/checkout/checkoutmainpage/checkoutorder/checkoutorder.component';\nimport { CheckoutsearchComponent } from './components/checkout/checkoutmainpage/checkoutsearch/checkoutsearch.component';\nimport { CheckoutsuccessComponent } from './components/checkout/checkoutmainpage/checkoutsuccess/checkoutsuccess.component';\nimport { SafepipePipe } from './pipes/safepipe.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomepageComponent,\n    Eror404Component,\n    LoginComponent,\n    WhyComponent,\n    CoutingproductsComponent,\n    RegisterComponent,\n    BuyinglistComponent,\n    BuyingcartlistComponent,\n    BuyingsearchComponent,\n    BuyingmainpageComponent,\n    CardlistComponent,\n    AllproductsComponent,\n    DairyproductsComponent,\n    FruitsproductsComponent,\n    MeatproductsComponent,\n    WineproductsComponent,\n    SearchproductsComponent,\n    DialogaddComponent,\n    BuyingcarttableComponent,\n    CheckoutmainpageComponent,\n    BuyingsidenavadminComponent,\n    MainComponent,\n    EditComponent,\n    AddComponent,\n    CheckouttableComponent,\n    CheckoutorderComponent,\n    CheckoutsearchComponent,\n    CheckoutsuccessComponent,\n    SafepipePipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CartService } from '../../services/cart.service'\nimport { LoginService } from '../../services/login.service'\n\n@Component({\n  selector: 'app-buyingcarttable',\n  templateUrl: './buyingcarttable.component.html',\n  styleUrls: ['./buyingcarttable.component.css']\n})\nexport class BuyingcarttableComponent implements OnInit {\n\n  constructor(public cart: CartService,\n    public login: LoginService,\n    public router: Router\n  ) { }\n\n\n \n  ngOnInit(): void {\n    // this.cart.GetCartItems({ \"cart_id\": this.login.loggedUser.cart_id }).subscribe(\n    //   (res: any) => {\n    //     this.cart.CartitmeTableArray = res\n    //     this.cart.totalPrice = this.getSum()\n    //   },\n    //   err => console.log(err)\n    // )\n  }\n\n  getSum() {\n    return this.cart.CartitmeTableArray.reduce((currentTotal, item) => {\n      return item.General_price + currentTotal\n    }, 0)\n  }\n\n  displayedColumns: string[] = ['Name', 'Quantity', 'Price', 'Actions'];\n\n  removeItemFromCart(item_id) {\n    console.log({ item_id })\n    this.cart.DeleteItemFromCart({ item_id }).subscribe(\n      (res: any) => {\n        console.log(res)\n\n      }, \n      err => console.log(err)\n    )\n    this.cart.GetCartItems({ \"cart_id\": this.login.loggedUser.cart_id }).subscribe(\n      (res: any) => {\n        console.log(res)\n        this.cart.CartitmeTableArray = res\n        this.cart.totalPrice = this.getSum()\n      },\n      err => console.log(err)\n    )\n  }\n\n  deleteAllCartItems() {\n    this.cart.ClearCart({ cart_id: this.login.loggedUser.cart_id }).subscribe(\n      (res: any) => {\n        console.log(res)\n        this.cart.CartitmeTableArray = []\n        this.cart.totalPrice = this.getSum()\n      },\n      err => console.log(err)\n    )\n  } \n\n  proceed_to_checkout() {\n    this.cart.isSideNavOpen = !this.cart.isSideNavOpen\n    this.router.navigateByUrl(\"/checkoutmainpage\")\n  }\n} \n","<table style=\"width:40vw;\" mat-table [dataSource]=\"cart.CartitmeTableArray\" class=\"mat-elevation-z8\">\n\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"Name\">\n        <th mat-header-cell *matHeaderCellDef> Name </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.product_name | titlecase}} </td>\n    </ng-container>\n\n    <!-- Quantity Column -->\n    <ng-container matColumnDef=\"Quantity\">\n        <th mat-header-cell *matHeaderCellDef> Quantity </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.quantity}} </td>\n    </ng-container>\n\n    <!-- Price Column -->\n    <ng-container matColumnDef=\"Price\">\n        <th mat-header-cell *matHeaderCellDef> Price </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.General_price}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"Actions\">\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\n        <td mat-cell *matCellDef=\"let element\">\n            <button mat-mini-fab (click)=\"removeItemFromCart(element.item_id)\">\n                <mat-icon>delete</mat-icon>\n            </button>\n\n        </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n<mat-card>\n    <div style=\"display: flex; justify-content: space-around;\">\n        <button mat-raised-button color=\"warn\" [disabled]=\"!cart.CartitmeTableArray.length\" (click)=\"deleteAllCartItems()\">Delete All Items</button>\n        <p style=\"padding-top:1rem ;\">\n            Total Price : {{cart.totalPrice}}\n        </p>\n        <button mat-raised-button color=\"primary\" [disabled]=\"!cart.CartitmeTableArray.length\" (click)=\"proceed_to_checkout()\">Checkout</button>\n    </div>\n</mat-card>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  constructor(private http: HttpClient) { }\n\n  CartitmeTableArray = []\n  totalPrice: number;\n  isSideNavOpen: boolean = false\n\n  BaseUrl = \"/api/items/\"\n\n  addToCart(body) {\n    return this.http.post(this.BaseUrl + \"addcartitem\", body, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": localStorage.access_token\n      }\n    })\n  }\n\n  GetCartItems(body) {\n    return this.http.post(this.BaseUrl + \"getallcartitemsbycartid\", body, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": localStorage.access_token\n      }\n    })\n  }\n\n  DeleteItemFromCart(body) {\n    return this.http.post(this.BaseUrl + \"deletecartitem\", body, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": localStorage.access_token\n      }\n    })\n  }\n\n  ClearCart(body) {\n    return this.http.post(this.BaseUrl + \"clearitemsfromcart\", body, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": localStorage.access_token\n      }\n    })\n  }\n\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { CartService } from 'src/app/services/cart.service';\nimport { LoginService } from 'src/app/services/login.service';\nimport { SearchService } from 'src/app/services/search.service';\nimport { DialogaddComponent } from '../dialogadd/dialogadd.component';\n\n \n@Component({\n  selector: 'app-searchproducts',\n  templateUrl: './searchproducts.component.html',\n  styleUrls: ['./searchproducts.component.css']\n})\nexport class SearchproductsComponent implements OnInit {\n\n  constructor( public search: SearchService,\n    public dialog: MatDialog,\n    public login: LoginService,\n    public cart: CartService,\n    public admin: AdminService) { }\n\n  ngOnInit(): void {\n   \n  }\n\n\n\n  AddToCart(product_id, product_price) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.autoFocus = true\n    this.dialog.open(DialogaddComponent, { data: { product_id, product_price } });\n  }\n\n  editClicked(item) {\n    console.log( item )\n    this.admin.itemToEdit = item \n    this.admin.updateEditForm(item)\n    this.admin.isEditShow = true;\n    this.admin.isAddShow = false;\n    this.cart.isSideNavOpen = true;\n  } \n\n}\n","<div *ngIf=\"search?.searchResultArray?.length !== 0\" class=\"flex\">\n    <mat-card *ngFor=\"let item of search?.searchResultArray\" class=\"card\">\n        <mat-card-header>\n            <mat-card-title>{{item.product_name | titlecase}}</mat-card-title>\n        </mat-card-header>\n        <img mat-card-image class=\"img\"  [src]=\"item.image_url\" [alt]=\"item.product_name\">\n        <mat-card-actions align=\"end\">\n            <button *ngIf=\"login.loggedUser.role==='user'\" (click)=\"AddToCart(item.product_id,item.price)\" matTooltip=\"Add To Cart\" color=\"primary\" mat-fab><mat-icon>add_shopping_cart</mat-icon></button>\n            <button *ngIf=\"login.loggedUser.role==='admin'\" (click)=\"editClicked(item)\" matTooltip=\"Edit\" color=\"primary\" mat-fab><mat-icon>edit</mat-icon></button>\n        </mat-card-actions>\n    </mat-card>\n</div>\n<div class=\"warninng\" *ngIf=\"search?.searchResultArray?.length === 0\">\n    <h1 style=\"text-align: center;\">This Category Is Empty </h1>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { CartService } from 'src/app/services/cart.service';\nimport { LoginService } from 'src/app/services/login.service';\nimport { ProductsService } from 'src/app/services/products.service';\nimport { DialogaddComponent } from '../dialogadd/dialogadd.component';\n\n@Component({\n  selector: 'app-fruitsproducts',\n  templateUrl: './fruitsproducts.component.html',\n  styleUrls: ['./fruitsproducts.component.css']\n})\nexport class FruitsproductsComponent implements OnInit {\n\n  constructor(    public product: ProductsService,\n    public dialog: MatDialog,\n    public login: LoginService,\n    public cart: CartService,\n    public admin: AdminService) { }\n\n  ngOnInit(): void {\n  }\n  AddToCart(product_id, product_price) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.autoFocus = true\n    this.dialog.open(DialogaddComponent, { data: { product_id, product_price } });\n  }\n\n  editClicked(item) {\n    console.log( item )\n    this.admin.itemToEdit = item \n    this.admin.updateEditForm(item)\n    this.admin.isEditShow = true;\n    this.admin.isAddShow = false;\n    this.cart.isSideNavOpen = true;\n  }\n}\n","<div *ngIf=\"product?.AllProducts?.Vegetables_Fruits_Array.length !== 0\" class=\"flex\">\n    <mat-card *ngFor=\"let item of product?.AllProducts?.Vegetables_Fruits_Array\" class=\"card\">\n        <mat-card-header>\n            <mat-card-title>{{item.product_name | titlecase}}</mat-card-title>\n        </mat-card-header>\n        <img mat-card-image class=\"img\"  [src]=\"item.image_url\" [alt]=\"item.product_name\">\n        <mat-card-actions align=\"end\">\n            <button *ngIf=\"login.loggedUser.role==='user'\" (click)=\"AddToCart(item.product_id,item.price)\" matTooltip=\"Add To Cart\" color=\"primary\" mat-fab><mat-icon>add_shopping_cart</mat-icon></button>\n            <button *ngIf=\"login.loggedUser.role==='admin'\" (click)=\"editClicked(item)\" matTooltip=\"Edit\" color=\"primary\" mat-fab><mat-icon>edit</mat-icon></button>\n        </mat-card-actions>\n    </mat-card>\n</div>\n<div class=\"warninng\" *ngIf=\"product?.AllProducts?.Vegetables_Fruits_Array.length === 0\">\n    <h1 style=\"text-align: center;\">This Category Is Empty </h1>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CheckoutService } from '../../../../services/checkout.service'\nimport { LoginService } from '../../../../services/login.service'\nimport { CartService } from '../../../../services/cart.service'\nimport { validateDate } from 'src/app/validators/validateDate.validators';\nimport { MatSnackBar } from '@angular/material/snack-bar'\n\n@Component({\n  selector: 'app-checkoutorder',\n  templateUrl: './checkoutorder.component.html',\n  styleUrls: ['./checkoutorder.component.css']\n})\nexport class CheckoutorderComponent implements OnInit {\n\n  constructor(public router: Router,\n    public checkout: CheckoutService,\n    public login: LoginService,\n    private snackBar: MatSnackBar,\n    public cart: CartService\n  ) { }\n\n  myFilter = (d: Date): boolean => {\n    console.log('dolev filter')\n    const time = d.getTime()\n    return !this.checkout?.OccupiedDates.find(x => {\n      console.log('time ', time)\n      console.log('checkout ', x)\n      return x == time\n    })\n  }\n\n\n  orderForm: FormGroup\n\n\n\n  ngOnInit(): void {\n    this.checkout.getOccupiedDates().subscribe(\n      (res: any) => {\n        console.log(\"dolev on innit\")\n        console.log(res)\n        this.checkout.OccupiedDates = res.map(e => new Date(e.date_for_delivery).getTime() - 7200000)\n        console.log(this.checkout.OccupiedDates)\n      }\n    )\n\n    this.orderForm = new FormGroup({\n      city: new FormControl('', Validators.required),\n      street: new FormControl('', Validators.required),\n      date_for_delivery: new FormControl('', [Validators.required, validateDate]),\n      four_digits: new FormControl('', [Validators.required, Validators.minLength(4)])\n    })\n  }\n\n\n \n\n  onOrder = async () => {\n    console.log(this.orderForm.value)\n    console.log(this.orderForm.errors)\n    let valueDate = await this.datestring(this.orderForm.value.date_for_delivery)\n    let todayDate = await this.datestring(new Date())\n    console.log(this.orderForm.value.date_for_delivery)\n    console.log(valueDate)\n    console.log(todayDate)\n    let bodyOBJ = {\n      customer_id: this.login.loggedUser.customer_id,\n      cart_id: this.login.loggedUser.cart_id,\n      total_price: this.cart.totalPrice,\n      city: this.orderForm.value.city,\n      street: this.orderForm.value.street,\n      date_for_delivery: valueDate,\n      date_of_purchase: todayDate,\n      four_digits: this.orderForm.value.four_digits\n    }\n    this.checkout.PlaceTheOrder(bodyOBJ).subscribe(\n      (res: any) => {\n        console.log(res)\n        this.router.navigateByUrl(\"/checkoutsuccess\")\n      },\n      err => {\n        console.log(err)\n        this.snackBar.open('something went wrong, contact the developers', 'dismiss', { duration: 4000 })\n      }\n    )\n  }\n\n\n  datestring = (date) => {\n    let year = date.getFullYear();\n    let month = date.getMonth() + 1;\n    let dt = date.getDate();\n    if (dt < 10) {\n      dt = '0' + dt;\n    }\n    if (month < 10) {\n      month = '0' + month;\n    }\n    return (year + '-' + month + '-' + dt);\n  }\n\n\n  getInputValue(input_name) {\n    console.log(input_name)\n    this.checkout.getInputValueFromDoubleClick({ customer_id: this.login.loggedUser.customer_id }).subscribe(\n      (res: any) => {\n        console.log(res)\n        this.orderForm.controls[`${input_name}`].setValue(res[0][`${input_name}`])\n      },\n      err => console.log(err)\n    )\n  }\n\n}  \n","<h1>Order</h1>\n<mat-divider></mat-divider>\n<div style=\"width: 90%; margin-left: 5%;margin-top: 1rem;\">\n    <h3>Shipping Details</h3>\n    <mat-divider></mat-divider>\n    <form class=\"orderform\" (ngSubmit)=\"onOrder()\" name=\"orderForm\" [formGroup]=\"orderForm\">\n\n        <mat-form-field appearance=\"outline\">\n            <mat-label>City</mat-label>\n            <input matTooltip=\"double click to import data\" (dblclick)=\"getInputValue('city')\" formControlName=\"city\" matInput required />\n            <mat-error *ngIf=\"orderForm.get('city').errors?.required\">\n                City is Required\n            </mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Street</mat-label>\n            <input matTooltip=\"double click to import data\" (dblclick)=\"getInputValue('street')\" formControlName=\"street\" matInput required />\n            <mat-error *ngIf=\"orderForm.get('street').errors?.required\">\n                Street is Required\n            </mat-error>\n        </mat-form-field>\n\n        <!-- <mat-form-field appearance=\"outline\">\n            <mat-label>Shipping Date</mat-label>\n            <input formControlName=\"date_for_delivery\" matInput required />\n            <mat-error *ngIf=\"orderForm.get('date_for_delivery').errors?.required\">\n                Shipping Date is Required\n            </mat-error>\n        </mat-form-field> -->\n\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Shipping Date</mat-label>\n            <input matInput\n             [matDatepicker]=\"date_for_delivery\"\n             [matDatepickerFilter]=\"myFilter\"\n            formControlName=\"date_for_delivery\"\n            >\n            <mat-datepicker-toggle matSuffix [for]=\"date_for_delivery\"></mat-datepicker-toggle>\n            <mat-datepicker #date_for_delivery></mat-datepicker>\n            <mat-error *ngIf=\"orderForm.get('date_for_delivery').errors?.required\">\n                Shipping Date is Required\n            </mat-error>\n            <mat-error *ngIf=\"orderForm?.controls['matDatepickerFilter']?.hasError('matDatepickerFilter')\">\n                Shipping Date is Invalid\n            </mat-error>\n          </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Four Digits of Credit Card</mat-label>\n            <input type=\"number\" formControlName=\"four_digits\" matInput required />\n            <mat-error *ngIf=\"orderForm?.controls['four_digits']?.errors?.minlength\">\n                Credit Card at least 4 digist\n            </mat-error>\n            <mat-error *ngIf=\"orderForm.get('four_digits')?.errors?.required\">\n                Credit Card is Required\n            </mat-error>\n        </mat-form-field>\n\n\n        <button [disabled]=\"orderForm.invalid\" mat-raised-button color=\"primary\">Order</button>\n\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from '../../../services/admin.service'\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ProductsService } from '../../../services/products.service'\nimport { CartService } from '../../../services/cart.service'\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  constructor(\n    public cart: CartService,\n    public products: ProductsService,\n    public admin: AdminService\n\n  ) { } \n \n\n  ngOnInit(): void {\n  \n  }\n  onEdit(){\n\n  }\n\n  categories = [\n    { cname: 'Milk & Dairy', cID: 1 },\n    { cname: 'Vegetables & Fruits', cID: 2 },\n    { cname: 'Meat & Fish', cID: 3 },\n    { cname: 'Wine & Drinks', cID: 4 }\n  ]\n  \n\n}\n","\n<form (ngSubmit)=\"onEdit()\" name=\"EditForm\" [formGroup]=\"admin.EditForm\" style=\"width: 40vw; display: flex;flex-direction: column; justify-content: space-around;align-items: center;margin-top: 0.5rem;\">\n    <mat-form-field style=\"width: 50%;\" class=\"full-width\" appearance=\"outline\">\n        <mat-label>Product Name</mat-label>\n        <input type=\"text\" formControlName=\"product_name\" matInput required />\n        <mat-error *ngIf=\"admin.EditForm.get('product_name').errors?.required\">\n             Product Name is Required \n        </mat-error>\n    </mat-form-field>\n\n    <mat-form-field style=\"width: 50%;\" class=\"full-width\" appearance=\"outline\">\n        <mat-label>Category</mat-label>\n        <mat-select formControlName=\"category_id\" required>\n            <mat-option *ngFor=\"let Category of categories\" [value]=\"Category.cID\">\n              {{Category.cname}}\n            </mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"admin.EditForm.get('category_id').errors?.required\">\n            Category is Required \n         </mat-error>\n    </mat-form-field>\n    \n\n    <mat-form-field style=\"width: 50%;\" class=\"full-width\" appearance=\"outline\">\n        <mat-label>Price</mat-label>\n        <input type=\"number\" formControlName=\"price\" matInput required />\n        <mat-error *ngIf=\"admin.EditForm.get('price').errors?.required\">\n           Price is Required \n        </mat-error>\n    </mat-form-field>\n    <mat-form-field style=\"width: 50%;\" class=\"full-width\" appearance=\"outline\">\n        <mat-label>Image Url</mat-label>\n        <input formControlName=\"image_url\" matInput required />\n        <mat-error *ngIf=\"admin.EditForm.get('image_url').errors?.required\">\n            Image Url Required\n        </mat-error>\n    </mat-form-field>\n    <button mat-raised-button color=\"primary\" >Update Product</button>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { CartService } from 'src/app/services/cart.service';\nimport { LoginService } from 'src/app/services/login.service';\nimport { ProductsService } from 'src/app/services/products.service';\nimport { DialogaddComponent } from '../dialogadd/dialogadd.component';\n\n@Component({\n  selector: 'app-meatproducts',\n  templateUrl: './meatproducts.component.html',\n  styleUrls: ['./meatproducts.component.css']\n})\nexport class MeatproductsComponent implements OnInit {\n\n  constructor(    public product: ProductsService,\n    public dialog: MatDialog,\n    public login: LoginService,\n    public cart: CartService,\n    public admin: AdminService) { }\n\n  ngOnInit(): void {\n  }\n\n  AddToCart(product_id, product_price) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.autoFocus = true\n    this.dialog.open(DialogaddComponent, { data: { product_id, product_price } });\n  }\n\n  editClicked(item) {\n    console.log( item )\n    this.admin.itemToEdit = item \n    this.admin.updateEditForm(item)\n    this.admin.isEditShow = true;\n    this.admin.isAddShow = false;\n    this.cart.isSideNavOpen = true;\n  }\n\n}\n","<div *ngIf=\"product?.AllProducts?.Meat_Fish_Array.length !== 0\" class=\"flex\">\n    <mat-card *ngFor=\"let item of product?.AllProducts?.Meat_Fish_Array\" class=\"card\">\n        <mat-card-header>\n            <mat-card-title>{{item.product_name | titlecase}}</mat-card-title>\n        </mat-card-header>\n        <img mat-card-image class=\"img\"  [src]=\"item.image_url\" [alt]=\"item.product_name\">\n        <mat-card-actions align=\"end\">\n            <button *ngIf=\"login.loggedUser.role==='user'\" (click)=\"AddToCart(item.product_id,item.price)\" matTooltip=\"Add To Cart\" color=\"primary\" mat-fab><mat-icon>add_shopping_cart</mat-icon></button>\n            <button *ngIf=\"login.loggedUser.role==='admin'\" (click)=\"editClicked(item)\" matTooltip=\"Edit\" color=\"primary\" mat-fab><mat-icon>edit</mat-icon></button>\n        </mat-card-actions>\n    </mat-card>\n</div>\n<div class=\"warninng\" *ngIf=\"product?.AllProducts?.Meat_Fish_Array.length === 0\">\n    <h1 style=\"text-align: center;\">This Category Is Empty </h1>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { CartService } from 'src/app/services/cart.service';\nimport { LoginService } from 'src/app/services/login.service';\nimport { ProductsService } from 'src/app/services/products.service';\nimport { DialogaddComponent } from '../dialogadd/dialogadd.component';\n\n@Component({\n  selector: 'app-wineproducts',\n  templateUrl: './wineproducts.component.html',\n  styleUrls: ['./wineproducts.component.css']\n})\nexport class WineproductsComponent implements OnInit {\n\n  constructor(    public product: ProductsService,\n    public dialog: MatDialog,\n    public login: LoginService,\n    public cart: CartService,\n    public admin: AdminService) { }\n\n  ngOnInit(): void {\n  }\n\n  AddToCart(product_id, product_price) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.autoFocus = true\n    this.dialog.open(DialogaddComponent, { data: { product_id, product_price } });\n  }\n\n  editClicked(item) {\n    console.log( item )\n    this.admin.itemToEdit = item \n    this.admin.updateEditForm(item)\n    this.admin.isEditShow = true;\n    this.admin.isAddShow = false;\n    this.cart.isSideNavOpen = true;\n  }\n\n}\n","<div *ngIf=\"product?.AllProducts?.Wine_Drinks_Array.length !== 0\" class=\"flex\">\n    <mat-card *ngFor=\"let item of product?.AllProducts?.Wine_Drinks_Array\" class=\"card\">\n        <mat-card-header>\n            <mat-card-title>{{item.product_name | titlecase}}</mat-card-title>\n        </mat-card-header>\n        <img mat-card-image class=\"img\"  [src]=\"item.image_url\" [alt]=\"item.product_name\">\n        <mat-card-actions align=\"end\">\n            <button *ngIf=\"login.loggedUser.role==='user'\" (click)=\"AddToCart(item.product_id,item.price)\" matTooltip=\"Add To Cart\" color=\"primary\" mat-fab><mat-icon>add_shopping_cart</mat-icon></button>\n            <button *ngIf=\"login.loggedUser.role==='admin'\" (click)=\"editClicked(item)\" matTooltip=\"Edit\" color=\"primary\" mat-fab><mat-icon>edit</mat-icon></button>\n        </mat-card-actions>\n    </mat-card>\n</div>\n<div class=\"warninng\" *ngIf=\"product?.AllProducts?.Wine_Drinks_Array.length === 0\">\n    <h1 style=\"text-align: center;\">This Category Is Empty </h1>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../../services/login.service'\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit {\n\n  constructor(public login: LoginService) { }\n\n  ngOnInit(): void {\n  }\n \n}\n","\n<p style=\"font-size: 2rem;margin-bottom: 0px;margin-top: 1rem;\" *ngIf=\"!login.loggedUser.islogged\" class=\"helloguest\">Hello Guest</p>\n<p style=\"font-size: 2rem;margin-bottom: 0px;margin-top: 1rem;\" *ngIf=\"login.loggedUser.islogged\" class=\"helloguest\">Hello {{login.loggedUser.fname}}</p>\n<br>\n<br>\n<!-- rowHeight=\"100px\" , rowHeight=\"2:1\" , rowHeight=\"fit\" style=\"height: 200px;\" -->\n<mat-grid-list cols=\"3\" rowHeight=\"fit\" style=\"height: 70vh;\" gutterSize=\"10px\">\n    <mat-grid-tile colspan=\"1\"><app-login></app-login></mat-grid-tile>\n    <mat-grid-tile colspan=\"1\"><app-why></app-why></mat-grid-tile>\n    <mat-grid-tile colspan=\"1\"><app-coutingproducts></app-coutingproducts></mat-grid-tile>\n</mat-grid-list>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { SearchService } from '../../services/search.service'\nimport { ProductsService } from '../../services/products.service'\n@Component({\n  selector: 'app-buyingsearch',\n  templateUrl: './buyingsearch.component.html',\n  styleUrls: ['./buyingsearch.component.css']\n})\nexport class BuyingsearchComponent implements OnInit {\n  searchItemForm: FormGroup\n\n  constructor(public search: SearchService,\n    public products: ProductsService) { }\n\n  ngOnInit(): void {\n    this.searchItemForm = new FormGroup({\n      product_name: new FormControl('', Validators.required),\n    })\n  }\n\n  onsearchItem() {\n    this.search.Search(this.searchItemForm.value).subscribe(\n      (res: any) => {\n        console.log(res)\n        this.search.searchResultArray = res;\n        this.search.matTabDisabled = false;\n        this.products.selectedTab = 5 \n      },\n      err => console.log(err)\n    )\n  }\n\n}\n","<form class=\"flexform\" (ngSubmit)=\"onsearchItem()\" name=\"searchItemForm\" [formGroup]=\"searchItemForm\" >\n    <mat-form-field class=\"full-width margin-left\" appearance=\"outline\">\n        <mat-label>search</mat-label>\n        <input formControlName=\"product_name\" matInput required />\n        <mat-error *ngIf=\"searchItemForm.get('product_name').errors?.required\">\n           Input is Required \n        </mat-error>\n    </mat-form-field>\n    <button [disabled]=\"searchItemForm.invalid\" mat-fab color=\"\" class=\"margin-left\" ><mat-icon>search</mat-icon></button>\n</form>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n\n  constructor(private http: HttpClient) { }\n\n  Url = \"/api/products/searchproductbyname\"\n\n  matTabDisabled: boolean = true;\n\n  searchResultArray: [\n    { product_id: number, product_name: string, category_id: number, price: number, image_url: string }\n  ]\n\n  Search(body) {\n    return this.http.post(this.Url, body, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      }\n    })\n  }\n\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n  constructor(private http: HttpClient) { }\n\n  BaseUrl = \"/api/customers/\"\n\n  submitRegister(body) {\n    return this.http.post(this.BaseUrl + 'register', body, {\n      headers: { \"Content-Type\": \"application/json\" }\n    })\n  }\n\n  CheckID(body) {\n    return this.http.post(this.BaseUrl + 'isidtaken', body, {\n      headers: { \"Content-Type\": \"application/json\" }\n    })\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { Eror404Component } from './components/eror404/eror404.component';\nimport { HomepageComponent } from './components/homepage/homepage.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { BuyingmainpageComponent } from './components/buyingmainpage/buyingmainpage.component'\nimport { AuthGuard } from './guards/auth.guard';\nimport { CheckoutmainpageComponent } from './components/checkout/checkoutmainpage/checkoutmainpage.component';\nimport { CheckoutsuccessComponent } from './components/checkout/checkoutmainpage/checkoutsuccess/checkoutsuccess.component';\n\nconst routes: Routes = [\n  { path: \"\", pathMatch: \"full\", redirectTo: \"home\" },\n  { path: \"home\", component: HomepageComponent },\n  { path: \"register\", component: RegisterComponent },\n  { path: \"buyingmainpage\", component: BuyingmainpageComponent , canActivate : [AuthGuard] },\n  { path: \"checkoutmainpage\", component: CheckoutmainpageComponent , canActivate : [AuthGuard] },\n  { path: \"checkoutsuccess\", component: CheckoutsuccessComponent , canActivate : [AuthGuard] },\n  { path: \"**\", component: Eror404Component },\n];\n \n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoginService } from '../../../../services/login.service'\nimport { CartService } from '../../../../services/cart.service'\nimport { CheckoutService } from '../../../../services/checkout.service'\nimport { jsPDF } from 'jspdf';\n\n\n@Component({\n  selector: 'app-checkoutsuccess',\n  templateUrl: './checkoutsuccess.component.html',\n  styleUrls: ['./checkoutsuccess.component.css']\n})\nexport class CheckoutsuccessComponent implements OnInit {\n\n  constructor(public router: Router,\n    public login: LoginService,\n    public checkout: CheckoutService,\n    public cart: CartService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n\n  async startShopping() {\n    this.login.loggedUser.customerCartStatus = 'new_cart'\n    let req_body = { customerCartStatus: 'new_cart', customer_id: this.login.loggedUser.customer_id }\n    await this.login.StartResumeShopping(req_body).subscribe(\n      (res: any) => {\n        console.log(res)\n        this.login.loggedUser.cart_id = res.cart_id\n        this.cart.GetCartItems({ \"cart_id\": res.cart_id }).subscribe(\n          (res: any) => {\n            this.cart.CartitmeTableArray = res\n            this.cart.totalPrice = this.getSum()\n          },\n          err => console.log(err)\n        )\n        this.router.navigateByUrl('/buyingmainpage')\n      },\n      err => console.log(err)\n    )\n  }\n\n\n\n  getSum() {\n    return this.cart.CartitmeTableArray.reduce((currentTotal, item) => {\n      return item.General_price + currentTotal\n    }, 0)\n  }\n\n\n\n\n\n\n\n  order_id;\n  total_price;\n  city;\n  street;\n  date_for_delivery;\n  date_of_purchase;\n  four_digits;\n  fname;\n  lname;\n  products;\n  htmlProducts\n\n  getData() {\n    const dataOBj = {\n      cart_id: this.login.loggedUser.cart_id,\n      customer_id: this.login.loggedUser.customer_id,\n    }\n    this.checkout.getRecieptInformation(dataOBj).subscribe(\n      (res: any) => {\n        console.log(res)\n        this.order_id = res.order_details[0].order_id\n        this.total_price = res.order_details[0].total_price\n        this.city = res.order_details[0].city\n        this.street = res.order_details[0].street\n        this.date_for_delivery = res.order_details[0].date_for_delivery\n        this.date_of_purchase = res.order_details[0].date_of_purchase\n        this.four_digits = res.order_details[0].four_digits\n        this.fname = res.customer_details[0].fname\n        this.lname = res.customer_details[0].lname\n        this.products = res.cart_items\n\n        this.htmlProducts = this.products.map(item => {\n          return (\n            `<tr>\n                <td>\n                    ${item.product_name}\n                </td>\n                <td>\n                ${item.quantity}\n                </td>\n                <td>\n                ${item.General_price}\n                </td>\n             </tr> \n            `\n          )\n        })\n        this.downloadPDF()\n      },\n      err => console.log(err)\n    )\n  }\n\n\n\n  downloadPDF() {\n    let doc = new jsPDF();\n    let htmlElement2 = `<body>\n                <h6>Order_number:${this.order_id}</h6>\n                <table>\n                <tr>\n                    <td>\n                      <h6>Name:${this.fname + \"_\" + this.lname}</h6>\n                    </td>\n                    <td>\n                      <h6>OrderD:${this.date_of_purchase}</h6>\n                    </td>\n                </tr>\n                <tr>\n                <td>\n                    <h6>Delivery:${this.date_for_delivery}</h6>\n                    </td>\n                </tr>                \n                <tr>\n                 <td>\n                    <h6>Adress:${this.city + \" \" + this.street}</h6>\n                    </td>\n                </tr>\n                <tr>\n                <td>\n                <h6>Digits${this.four_digits}</h6>\n               </td>\n                </tr>\n                </table>\n                <br/>\n                <br/>\n        <table>\n            <tr>\n                <td>item_Name</td>\n                <td>Qnt</td>\n                <td>Price</td>\n                ${this.htmlProducts}\n            </tr>\n          \n        </table>\n<br/>\n        <h6>Total_Price:${this.total_price}</h6>\n</body>\n`\n\n    doc.html(htmlElement2, {\n      callback: function (doc) {\n        doc.save(`order.pdf`);\n      },\n      x: 10,\n      y: 10,\n    })\n\n\n  }\n\n}\n","<div class=\"border\">\n    <h2 style=\"text-align: center;\" >Thank you for your Purchase </h2>\n    <h3 style=\"text-align: center;\">To Download The <button (click)=\"getData()\" mat-raised-button>Receipt</button></h3>\n    <button mat-raised-button color=\"primary\" (click)=\"startShopping()\" >Confirmation</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-why',\n  templateUrl: './why.component.html',\n  styleUrls: ['./why.component.css']\n})\nexport class WhyComponent implements OnInit { \n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p style=\"width: 70%; text-align: center; margin-left: 15%;\" class=\"mat-body-strong\">You deserve the best vegetables\n    That nature has to offer!\n    Welcome to the writer who always cares for you!\n    Huge selection of premium premium vegetables\n    Coming straight to you!\n    Worth buying in shufersal dublon</p>\n\n    <img style=\"width: 95%; margin-left: 2.5%;\" src=\"/images/logo.png\" alt=\"vegtables\" >\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}